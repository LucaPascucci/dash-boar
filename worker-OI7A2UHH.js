addEventListener("message",({data:e})=>{let r=e.cumulatedTimeLaps,t=e.normalizedCumulatedTimeLaps,n=e.referenceRaceNumberAverageTime,u=e.paces,a=e.lastLapNumberByRaceNumber,i=e.lapConfig,m=e.lapSimulatorConfig,s=i.referenceRaceNumber,o=N(t,n,s,a),p=T(r,a,u,m);postMessage({shadowLaps:o,futureLaps:p})});function T(e,r,t,n){let u=[],a=new Map,i=e;for(let m=0;m<n.simulatedLaps;m++){let s=R(i),o=g(s),p=C(s,r),k=g(p);[...e.keys()].forEach(c=>{let l=v(o,k,c);if(l.overtakenRaceNumbers.length==0&&l.overtakenByRaceNumbers.length>0){let b=p.get(c);b&&(i.get(c)?.push(b),a.has(c)||a.set(c,[b]),a.get(c)?.push(b))}let L=r.get(c)||0,M=n.overtakeThresholdMilliseconds,f=p.get(c);if(f){let b=0;for(let h of l.overtakenRaceNumbers){let d=r.get(h)||0;L<d-M?b+=n.toOvertakeLostTimeMilliseconds:b-=d-L}for(let h of l.overtakenByRaceNumbers)(r.get(h)||0)<L-M&&(b+=n.beOvertakenLostTimeMilliseconds);f+=b,i.get(c)?.push(f),a.has(c)?a.get(c)?.push(f):a.set(c,[f])}})}return a.forEach((m,s)=>{let o=t.get(s);o&&u.push({startLapNumber:o+1,cumulatedTimeLaps:new Map([[s,m]])})}),u}function v(e,r,t){let n=[],u=[],a=e.get(t),i=r.get(t);return a===void 0||i===void 0?{overtakenRaceNumbers:[],overtakenByRaceNumbers:[]}:(e.forEach((m,s)=>{if(s!==t){let o=r.get(s);o!==void 0&&(a>=m&&i<o&&n.push(s),m>=a&&o<i&&u.push(s))}}),{overtakenRaceNumbers:n,overtakenByRaceNumbers:u})}function R(e){let r=new Map;return e.forEach((t,n)=>{r.set(n,t[t.length-1])}),r}function g(e){let r=new Map,t=[];return e.forEach((n,u)=>{t.push({raceNumber:u,totalLapTimeMilliseconds:n})}),t.sort((n,u)=>u.totalLapTimeMilliseconds-n.totalLapTimeMilliseconds),t.forEach((n,u)=>{r.set(n.raceNumber,u+1)}),r}function C(e,r){let t=new Map;return e.forEach((n,u)=>{let a=r.get(u)||0;t.set(u,n+a)}),t}function N(e,r,t,n){let u=[],a=n.get(t);return a&&e.forEach((i,m)=>{if(t!==m){let s=n.get(m);if(s&&s!==a){let o=a-s,p=w(i,r,o);u.push({cumulatedTimeLaps:new Map([[m,p]]),startLapNumber:o>=0?o:0})}}}),u}function w(e,r,t){let n=[];return t<0&&(e=e.slice(Math.abs(t))),e.forEach(u=>{n.push(u+r*t)}),n}
