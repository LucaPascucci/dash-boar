addEventListener("message",({data:a})=>{let e=a.lapConfig,t=[...a.laps.values()],n=e.referenceRaceNumber,u=N(t),m=d(t),s=g(t,e),c=L(m),o=f(c,n),p=l(c,o),b=i(m);postMessage({paces:s,cumulatedTimeLaps:p,driverNamesByRaceNumber:u,normalizedCumulatedTimeLaps:p,referenceRaceNumberAverageTime:o,lastLapNumberByRaceNumber:b})});function i(a){let e=new Map;return a.forEach((r,t)=>{if(r.length>0){let n=r.sort((u,m)=>m.lapNumber-u.lapNumber);e.set(t,n[0].lapNumber)}}),console.log(e),e}function l(a,e){if(e===0)return a;let r=new Map;return a.forEach((t,n)=>{let u=t.map((m,s)=>s*e-m);r.set(n,u)}),r}function f(a,e){if(a.has(e)){let r=a.get(e);return r&&r.length>0?r[r.length-1]/(r.length-1):0}return 0}function N(a){let e=new Map;return a.forEach(r=>{e.has(r.raceNumber)||e.set(r.raceNumber,r.driverName)}),e}function L(a){let e=new Map;return a.forEach((r,t)=>{let n=r.sort((s,c)=>s.lapNumber-c.lapNumber),u=[];u.push(0);let m=0;n.forEach(s=>{m+=s.lapMilliseconds,u.push(m)}),e.set(t,u)}),e}function d(a){let e=new Map;return a.forEach(r=>{e.has(r.raceNumber)||e.set(r.raceNumber,[]),e.get(r.raceNumber)?.push(r)}),e}function g(a,e){let r=new Map,t=new Map;return a.filter(n=>!n.pitStop&&!n.deleted).forEach(n=>{t.has(n.raceNumber)||t.set(n.raceNumber,[]),t.get(n.raceNumber)?.push(n)}),t.forEach((n,u)=>{let s=n.filter(c=>!c.pitStop&&c.lapMilliseconds<e.paceLapThresholdMilliseconds).sort((c,o)=>o.lapNumber-c.lapNumber).slice(0,e.paceLapNumber);if(s.length>0){let o=s.reduce((p,b)=>p+b.lapMilliseconds,0)/s.length;r.set(u,o)}}),r}
