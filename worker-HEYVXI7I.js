addEventListener("message",({data:s})=>{let e=s.raceConfig,t=[...s.laps.values()],a=l(t),c=f(t),m=L(t,e.lapConfig),n=b(c);postMessage({paces:m,cumulatedTimeLaps:n,driverNamesByRaceNumber:a})});function l(s){let e=new Map;return s.forEach(r=>{e.has(r.raceNumber)||e.set(r.raceNumber,r.driverName)}),e}function b(s){let e=new Map;return s.forEach((r,t)=>{let a=r.sort((n,u)=>n.lapNumber-u.lapNumber),c=[];c.push(0);let m=0;a.forEach(n=>{m+=n.lapMilliseconds,c.push(m)}),e.set(t,c)}),e}function f(s){let e=new Map;return s.forEach(r=>{e.has(r.raceNumber)||e.set(r.raceNumber,[]),e.get(r.raceNumber)?.push(r)}),e}function L(s,e){let r=new Map,t=new Map;return s.filter(a=>!a.pitStop&&!a.deleted).forEach(a=>{t.has(a.raceNumber)||t.set(a.raceNumber,[]),t.get(a.raceNumber)?.push(a)}),t.forEach((a,c)=>{let n=a.filter(u=>!u.pitStop&&u.lapMilliseconds<e.paceLapThresholdMilliseconds).sort((u,o)=>o.lapNumber-u.lapNumber).slice(0,e.paceLapNumber);if(n.length>0){let o=n.reduce((p,i)=>p+i.lapMilliseconds,0)/n.length;r.set(c,o)}}),r}
