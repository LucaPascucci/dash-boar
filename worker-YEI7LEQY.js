addEventListener("message",({data:a})=>{let r=a.raceConfig,t=[...a.laps.values()],n=r.gapChartConfig.referenceRaceNumber,m=M(t),o=d(t),u=g(t,r.lapConfig),s=L(o),c=h(s,n),i=f(s,c),p=l(i,c,r);postMessage({paces:u,cumulatedTimeLaps:i,driverNamesByRaceNumber:m,shadowLaps:p})});function l(a,r,e){let t=[];for(let n=1;n<=e.lapConfig.shadowLaps;n++)t.push(b(a,r,n)),t.push(b(a,r,-Math.abs(n)));return t}function b(a,r,e){let t=new Map;return a.forEach((n,m)=>{let o=[],u=n;e<0&&(u=u.slice(Math.abs(e))),u.forEach(s=>{o.push(s+r*e)}),t.set(m,o)}),{cumulatedTimeLaps:t,startLapNumber:e>=0?e:0}}function f(a,r){if(r===0)return a;let e=new Map;return a.forEach((t,n)=>{let m=t.map((o,u)=>u*r-o);e.set(n,m)}),e}function h(a,r){if(a.has(r)){let e=a.get(r);return e&&e.length>0?e[e.length-1]/(e.length-1):0}return 0}function M(a){let r=new Map;return a.forEach(e=>{r.has(e.raceNumber)||r.set(e.raceNumber,e.driverName)}),r}function L(a){let r=new Map;return a.forEach((e,t)=>{let n=e.sort((u,s)=>u.lapNumber-s.lapNumber),m=[];m.push(0);let o=0;n.forEach(u=>{o+=u.lapMilliseconds,m.push(o)}),r.set(t,m)}),r}function d(a){let r=new Map;return a.forEach(e=>{r.has(e.raceNumber)||r.set(e.raceNumber,[]),r.get(e.raceNumber)?.push(e)}),r}function g(a,r){let e=new Map,t=new Map;return a.filter(n=>!n.pitStop&&!n.deleted).forEach(n=>{t.has(n.raceNumber)||t.set(n.raceNumber,[]),t.get(n.raceNumber)?.push(n)}),t.forEach((n,m)=>{let u=n.filter(s=>!s.pitStop&&s.lapMilliseconds<r.paceLapThresholdMilliseconds).sort((s,c)=>c.lapNumber-s.lapNumber).slice(0,r.paceLapNumber);if(u.length>0){let c=u.reduce((i,p)=>i+p.lapMilliseconds,0)/u.length;e.set(m,c)}}),e}
